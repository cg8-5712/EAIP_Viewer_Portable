name: Pull Request Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-check:
    name: PR Quality Check
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史用于比较

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check for syntax errors
        run: |
          python -m py_compile src/**/*.py
        shell: pwsh
        continue-on-error: true

      - name: Check code size
        run: |
          $totalLines = 0
          Get-ChildItem -Path src -Recurse -Filter *.py | ForEach-Object {
            $lines = (Get-Content $_.FullName | Measure-Object -Line).Lines
            $totalLines += $lines
          }
          Write-Host "Total lines of Python code: $totalLines"
        shell: pwsh

      - name: PR Summary
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const summary = `
            ## PR 检查摘要

            - **标题**: ${pr.title}
            - **作者**: @${pr.user.login}
            - **基础分支**: ${pr.base.ref}
            - **变更文件**: ${pr.changed_files}
            - **新增行数**: +${pr.additions}
            - **删除行数**: -${pr.deletions}

            ✓ 自动检查已完成
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: summary
            });
